<?php

//************************
// Function for global functions
//************************

// Find the $_GET variable
function GetVar($name, $default)
{
  $fix = (isset($_GET[$name])) ? $_GET[$name] : $default;
  return $fix;
}

// Find the $_POST array
function PostVar($name, $default = '')
{
  $fix = (array_key_exists($name, $_POST)) ? $_POST[$name] : $default;
  return $fix;
}

// Find the $_POST variable
function PostFile($name)
{
  $default = array('name' => '', 'type' => '', 'size' => 0, 'tmp_name' => '', 'error' => UPLOAD_ERR_NO_FILE, 'full_path' => '');
  $fix = (isset($_FILES[$name])) ? $_FILES[$name] : $default;
  return $fix;
}

// Redirect the header
function HeaderLocation($location)
{
  Header('Location: ' . $location);
}

// Build the site navigation by user
function BuildNavigation($page = '')
{
  global $myACCOUNT;
  global $myACCOUNT_TYPE;

  $welcome = ($myACCOUNT_TYPE !== '') ? ' | Welcome ' . ucwords($myACCOUNT['full_name']) . '!' : '';

  $navigation = '';
  // add class "fixed-top" to navbar
  $navigation .= '<nav class="navbar navbar-expand-lg navbar-dark bg-dark">' . "\n";
  $navigation .= '  <div class="container-fluid">' . "\n";
  $navigation .= '    <a class="navbar-brand" href="' . WEB_ROOT . '/html/login.phtml">Social 02' . $welcome . '</a>' . "\n";
  $navigation .= '    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">' . "\n";
  $navigation .= '      <span class="navbar-toggler-icon"></span>' . "\n";
  $navigation .= '    </button>' . "\n";
  $navigation .= '    <div class="collapse navbar-collapse" id="navbarSupportedContent">' . "\n";

  // Only allow certain elements if user is logged in
  if($myACCOUNT_TYPE !== '')
  {
    $navigation .= '      <ul class="navbar-nav me-auto mb-2 mb-lg-0">';
    $navigation .= '        <li class="nav-item">';
    $navigation .= '          <a class="nav-link active" aria-current="fake" href="' . WEB_ROOT . '/html/' . $myACCOUNT_TYPE . '/index.phtml">Feed</a>';
    $navigation .= '        </li>';
    $navigation .= '        <li class="nav-item">';
    $navigation .= '          <a class="nav-link" href="#">Profile</a>';
    $navigation .= '        </li>';
    $navigation .= '        <li class="nav-item">';
    $navigation .= '          <a class="nav-link" href="#">Friends</a>';
    $navigation .= '        </li>';
    $navigation .= '        <li class="nav-item">';
    $navigation .= '          <a class="nav-link" href="' . WEB_ROOT . '/html/' . $myACCOUNT_TYPE . '/post.phtml">New Post</a>';
    $navigation .= '        </li>';

    // Disabled
    // $navigation .= '        <li class="nav-item">' . "\n";
    // $navigation .= '          <a class="nav-link disabled" href="#" tabindex="-1" aria-disabled="true">Welcome ' . $myACCOUNT['username'] . '!</a>' . "\n";
    // $navigation .= '        </li>' . "\n";

    // // Dropdown
    // $navigation .= '        <li class="nav-item dropdown">' . "\n";
    // $navigation .= '          <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">' . "\n";
    // $navigation .= '            Dropdown' . "\n";
    // $navigation .= '          </a>' . "\n";
    // $navigation .= '          <ul class="dropdown-menu" aria-labelledby="navbarDropdown">' . "\n";
    // $navigation .= '            <li><a class="dropdown-item" href="#">Action</a></li>' . "\n";
    // $navigation .= '            <li><a class="dropdown-item" href="#">Another action</a></li>' . "\n";
    // $navigation .= '            <li><hr class="dropdown-divider"></li>' . "\n";
    // $navigation .= '            <li><a class="dropdown-item" href="#">Something else here</a></li>' . "\n";
    // $navigation .= '          </ul>' . "\n";
    // $navigation .= '        </li>' . "\n";
    $navigation .= '      </ul>' . "\n";

    $navigation .= '      <div class="d-flex float-end">' . "\n";
    $navigation .= '        <ul class="navbar-nav">' . "\n";
    $navigation .= '          <li class="nav-item me-3">' . "\n";
    $navigation .= '            <a class="btn btn-primary" href="' . WEB_ROOT . '/html/logout.phtml">Logout</a>' . "\n";
    $navigation .= '          </li>' . "\n";

    $navigation .= '        <form name="xNAVSEARCH" class="d-flex" method="GET" action="' . WEB_ROOT . '/html/search.phtml">' . "\n";
    $navigation .= '          <input name="USER" class="form-control me-2" type="search" placeholder="Search @username" aria-label="Search">' . "\n";
    $navigation .= '          <button class="btn btn-outline-success" type="submit">Search</button>' . "\n";
    $navigation .= '        </form>' . "\n";
    $navigation .= '        </ul>' . "\n";
    $navigation .= '        </div>' . "\n";
  }
  else
  {
    $navigation .= '      <ul class="navbar-nav me-auto mb-2 mb-lg-0">' . "\n";
    $navigation .= '        <li class="nav-item">' . "\n";
    $navigation .= '          <a class="nav-link active" aria-current="page" href="' . WEB_ROOT . '/html/login.phtml">Login</a>' . "\n";
    $navigation .= '        </li>' . "\n";
    $navigation .= '        <li class="nav-item">' . "\n";
    $navigation .= '          <a class="nav-link active" aria-current="page" href="' . WEB_ROOT . '/html/register.phtml">Register</a>' . "\n";
    $navigation .= '        </li>' . "\n";
    $navigation .= '      </ul>' . "\n";
  }

  $navigation .= '    </div>' . "\n";
  $navigation .= '  </div>' . "\n";
  $navigation .= '</nav>' . "\n";

  return $navigation;
}


// Insert a new record into the selected table
function DB_Insert($table, $data)
{
  global $DB;
  $new_id = 0;

  // Retrieve an indexed list of all tables
  $all_tables = json_decode(DB_TABLES);
  $all_tables = array_flip($all_tables);

  // Check if the given table exists
  $okay = (array_key_exists($table, $all_tables));
  if(!$okay)
  {
    echo 'Failed to find a valid table. - ' . $table . "\n";
  }

  // INSERT INTO *tbl_name* (col1, col2, col3, col4) VALUES (val1, val2, val3, val4);
  $query = '';

  // Build ^INSERT INTO *tbl_name* (col1, col2, col3)
  $query .= 'INSERT INTO ' . $table . ' (';
  foreach($data as $column => $value)
  {
    $query .= $column . ', ';
  }
  $query = rtrim($query, ', ');

  // Build ^ VALUES (val1, val2, val3)
  $query .= ') VALUES (';
  foreach($data as $column => $value)
  {
    $query .= '\'' . $value . '\', ';
  }
  $query = rtrim($query, ', ');
  $query .= ')';

  // Run the built query
  $result = $DB->query($query);
  $okay = ($result !== false);
  if(!$okay)
  {
    echo 'Failed to insert the query with table - ' . $table . "\n";
    echo 'Query : ' . $query . "\n";
    // echo $DB->error_get_last();
  }

  // Set the newly created id as return
  if($okay)
  {
    $new_id = $DB->insert_id;
  }
  return $new_id;
}

function DB_Search($table, $data)
{
  global $DB;
  $record = array();

  // Retrieve an indexed list of all tables
  $all_tables = json_decode(DB_TABLES);
  $all_tables = array_flip($all_tables);

  // Check if the given table exists
  $okay = (array_key_exists($table, $all_tables));
  if(!$okay)
  {
    echo 'Failed to find a valid table. - ' . $table . "\n";
  }

  // Find the used columns
  $columns = '';
  foreach($data as $column => $value)
  {
    $columns .= $column . ', ';
  }
  $columns = rtrim($columns, ', ');

  $query = '';
  $query .= 'SELECT * FROM ' . $table . ' WHERE';
  foreach($data as $column => $value)
  {
    $query .= ' ' . $column . ' = \'' . $value . '\' AND';
  }
  $query = rtrim($query, ' AND');

  $rows = array();
  $result = $DB->query($query);
  while($row = $result->fetch_array(MYSQLI_ASSOC))
  {
    $rows[] = $row;
  }

  return $rows;
}

function DB_Delete($table, $data = array('id' => '0'))
{
  global $DB;
  global $DEBUG_MESSAGE;
  $record = array();
  $result = false;

  // Retrieve an indexed list of all tables
  $all_tables = json_decode(DB_TABLES);
  $all_tables = array_flip($all_tables);

  // Check if the given table exists
  $okay = (array_key_exists($table, $all_tables));
  if(!$okay)
  {
    echo 'Failed to find a valid table. - ' . $table . "\n";
  }

  // Search for a record with a matching ID
  $record = DB_Search($table, $data);
  if(count($record) === 1)
  {
    $query = 'DELETE FROM ' . $table . ' WHERE';
    foreach($data as $col => $value)
    {
      $query .= ' ' . $col . ' = ' . '\'' . $value . '\' AND';
    }
    $query = rtrim($query, ' AND');

    $result = $DB->query($query);
    if(!$result)
    {
      $DEBUG_MESSAGE = 'Record in ' . $table . ' could not be deleted! ';
      $DEBUG_MESSAGE .= '[ ' . json_encode($data) . ' ]';
    }
  }
  else
  {
    $DEBUG_MESSAGE = 'Record does not exist';
    $DEBUG_MESSAGE .= '[ ' . json_encode($data) . ' ]';
  }

  return (Boolean)$result;
}

// function DB_LoadImages($id = $myACCOUNT['id'])
// {

//   if($id === '')
//   {
//     return false;
//   }
//   else
//   {
//     // Search for friends of $myACCOUNT?
//     return false;
//   }
// }

?>